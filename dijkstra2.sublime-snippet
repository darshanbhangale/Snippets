<snippet>
	<content><![CDATA[
const int INF = imax;
vector<vector<pair<int, int>>> adj;
void dijkstra2(int s, vector<int> & d/*, vector<int> & p,int t*/) {
    int n = adj.size();
    d.assign(n, INF);
    // p.assign(n, -1);

    d[s] = 0;
    set<pair<int, int>> q;
    q.insert({0, s});
    while (!q.empty()) {
        int v = q.begin()->second;
        q.erase(q.begin());

        for (auto edge : adj[v]) {
            int to = edge.first;
            int len = edge.second;

            if (d[v] + len < d[to]) {
                q.erase({d[to], to});
                d[to] = d[v] + len;
                // p[to] = v;
                q.insert({d[to], to});
            }
        }
    }
    // vector<int> path;
    // for (int v = t; v != s; v = p[v]){
    //     path.push_back(v);
    // }
    // path.push_back(s);

    // reverse(path.begin(), path.end());
    // return path;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>dijkstra2</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
